{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "8941575253657905733"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "16275838060758550204"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB module skeleton"
              }
            },
            "env": {
              "type": "string",
              "defaultValue": "dev"
            },
            "accountName": {
              "type": "string",
              "defaultValue": "[format('naughtychatscosmos{0}', uniqueString(resourceGroup().id))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2021-04-15",
              "name": "[parameters('accountName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0
                  }
                ],
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ],
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                }
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}', parameters('accountName'), 'naughtychats-db')]",
              "properties": {
                "resource": {
                  "id": "naughtychats-db"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('accountName'), 'naughtychats-db', 'messages')]",
              "properties": {
                "resource": {
                  "id": "messages",
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), 'naughtychats-db')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('accountName'), 'naughtychats-db', 'users')]",
              "properties": {
                "resource": {
                  "id": "users",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), 'naughtychats-db')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('accountName'), 'naughtychats-db', 'ledger')]",
              "properties": {
                "resource": {
                  "id": "ledger",
                  "partitionKey": {
                    "paths": [
                      "/user_id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), 'naughtychats-db')]"
              ]
            }
          ],
          "outputs": {
            "accountName": {
              "type": "string",
              "value": "[parameters('accountName')]"
            },
            "accountEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2021-04-15').documentEndpoint]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acr",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "6927207877104455673"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "ACR module skeleton"
              }
            },
            "env": {
              "type": "string",
              "defaultValue": "dev"
            },
            "registryName": {
              "type": "string",
              "defaultValue": "[format('naughtychatsacr{0}', uniqueString(resourceGroup().id))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[parameters('registryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            }
          ],
          "outputs": {
            "registryName": {
              "type": "string",
              "value": "[parameters('registryName')]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2021-09-01').loginServer]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "10337271917231269090"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Key Vault module skeleton"
              }
            },
            "env": {
              "type": "string",
              "defaultValue": "dev"
            },
            "vaultName": {
              "type": "string",
              "defaultValue": "[format('naughtychatskv{0}', uniqueString(resourceGroup().id))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[parameters('vaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('vaultName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "17067893122640924276"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Storage module skeleton for blobs"
              }
            },
            "env": {
              "type": "string",
              "defaultValue": "dev"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('naughtychats{0}{1}', parameters('env'), uniqueString(resourceGroup().id))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'images')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "blobContainerName": {
              "type": "string",
              "value": "images"
            },
            "storageEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').primaryEndpoints.blob]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "servicebus",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "73766583281380695"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Service Bus module skeleton"
              }
            },
            "env": {
              "type": "string",
              "defaultValue": "dev"
            },
            "namespaceName": {
              "type": "string",
              "defaultValue": "[format('naughtychatssb{0}{1}', parameters('env'), uniqueString(resourceGroup().id))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2021-11-01",
              "name": "[parameters('namespaceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('namespaceName'), 'gen-jobs')]",
              "properties": {
                "enablePartitioning": false,
                "lockDuration": "PT1M"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaceName'))]"
              ]
            }
          ],
          "outputs": {
            "namespaceName": {
              "type": "string",
              "value": "[parameters('namespaceName')]"
            },
            "queueName": {
              "type": "string",
              "value": "gen-jobs"
            }
          }
        }
      }
    }
  ]
}